version: '3'
services:
  mage_payground:
    image: personal/mage_playground:latest
    container_name: ${CONTAINER_NAME}_mage
    command: mage start ${PROJECT_NAME}
    env_file:
      - ${ENV_FILE}
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    environment:
      USER_CODE_PATH: /home/src/${PROJECT_NAME}
      REQUIRE_USER_AUTHENTICATION: ${REQUIRE_USER_AUTHENTICATION}
      MAGE_DATABASE_CONNECTION_URL: ${MAGE_DATABASE_CONNECTION_URL}
      CONCURRENCY_CONFIG_BLOCK_RUN_LIMIT: ${CONCURRENCY_CONFIG_BLOCK_RUN_LIMIT}
      CONCURRENCY_CONFIG_PIPELINE_RUN_LIMIT: ${CONCURRENCY_CONFIG_PIPELINE_RUN_LIMIT}
      DEFAULT_OWNER_EMAIL: ${DEFAULT_OWNER_EMAIL}
      DEFAULT_OWNER_PASSWORD: ${DEFAULT_OWNER_PASSWORD}
      DEFAULT_OWNER_USERNAME: ${DEFAULT_OWNER_USERNAME}
    ports:
      - 6789:6789
    volumes:
      - .:/home/src/
    restart: on-failure
    networks:
      - data_connection
    depends_on:
      - postgres_mage
  postgres_mage:
    image: postgres:latest
    restart: on-failure
    container_name: ${CONTAINER_NAME}_postgres_mage
    env_file:
      - ${ENV_FILE}
    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgres_mage_data:/var/lib/postgresql/data
    networks:
      - data_connection
networks:
  data_connection:
    driver: bridge
    external: true